#!/usr/bin/env python

PACKAGE='ImageAnalysis'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *
from driver_base.msg import SensorLevels

gen = ParameterGenerator()

onoff_enum          = gen.enum([gen.const("Off",                    str_t, "Off",        "Off"),
                                gen.const("On",                     str_t, "On",         "On") ],
                                "On or Off")

gen.add("Topic",                str_t,    SensorLevels.RECONFIGURE_RUNNING, "Topic",                "image_raw")
gen.add("ContrastAuto",         bool_t,   SensorLevels.RECONFIGURE_RUNNING, "ContrastAuto",         False)
gen.add("ContrastRange",        bool_t,   SensorLevels.RECONFIGURE_RUNNING, "ContrastRange",        False)
gen.add("ContrastLo",           int_t,    SensorLevels.RECONFIGURE_RUNNING, "ContrastLo",           2000, 0, 65536)
gen.add("ContrastHi",           int_t,    SensorLevels.RECONFIGURE_RUNNING, "ContrastHi",           5000, 0, 65536)
gen.add("AnnotateMinMax",       bool_t,   SensorLevels.RECONFIGURE_RUNNING, "AnnotateMinMax",       False)
gen.add("AnnotateXY",           bool_t,   SensorLevels.RECONFIGURE_RUNNING, "AnnotateXY",           False)
gen.add("x",                    int_t,    SensorLevels.RECONFIGURE_RUNNING, "x",                    0, 0, 4096)
gen.add("y",                    int_t,    SensorLevels.RECONFIGURE_RUNNING, "y",                    0, 0, 4096)
gen.add("ConvertKtoCforFLIR",   bool_t,   SensorLevels.RECONFIGURE_RUNNING, "ConvertKtoC for FLIR", False)

exit(gen.generate(PACKAGE, "image_analysis_params", "ImageAnalysis"))
