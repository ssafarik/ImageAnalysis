#!/usr/bin/env python

PACKAGE='ImageAnalysis'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *
from driver_base.msg import SensorLevels

gen = ParameterGenerator()

onoff_enum          = gen.enum([gen.const("Off",                    str_t, "Off",        "Off"),
                                gen.const("On",                     str_t, "On",         "On") ],
                                "On or Off")

gen.add("topic",                 str_t,    SensorLevels.RECONFIGURE_RUNNING, "topic",                 "image_raw")
gen.add("ContrastAuto",          bool_t,   SensorLevels.RECONFIGURE_RUNNING, "ContrastAuto",          False)
gen.add("ContrastRange",         bool_t,   SensorLevels.RECONFIGURE_RUNNING, "ContrastRange",         False)
gen.add("colorLo",               int_t,    SensorLevels.RECONFIGURE_RUNNING, "colorLo",               0, 0, 65535)
gen.add("colorHi",               int_t,    SensorLevels.RECONFIGURE_RUNNING, "colorHi",               65535, 0, 65535)
gen.add("AnnotateMinMax",        bool_t,   SensorLevels.RECONFIGURE_RUNNING, "AnnotateMinMax",        False)
gen.add("AnnotateROIMean",       bool_t,   SensorLevels.RECONFIGURE_RUNNING, "AnnotateROIMean",       False)
gen.add("xROI",                  int_t,    SensorLevels.RECONFIGURE_RUNNING, "xROI",                  0, 0, 2048)
gen.add("yROI",                  int_t,    SensorLevels.RECONFIGURE_RUNNING, "yROI",                  0, 0, 2048)
gen.add("wROI",                  int_t,    SensorLevels.RECONFIGURE_RUNNING, "wROI",                  2048, 0, 2048)
gen.add("hROI",                  int_t,    SensorLevels.RECONFIGURE_RUNNING, "hROI",                  2048, 0, 2048)
gen.add("PublishROIHistogram",   bool_t,   SensorLevels.RECONFIGURE_RUNNING, "PublishROIHistogram",   False)
gen.add("ConvertKtoCforFLIR",    bool_t,   SensorLevels.RECONFIGURE_RUNNING, "ConvertKtoC for FLIR",  False)

exit(gen.generate(PACKAGE, "image_analysis_params", "ImageAnalysis"))
